import static org.gradle.api.JavaVersion.VERSION_1_7

apply plugin: 'java'
apply plugin: 'osgi'
apply plugin: 'signing'
apply plugin: 'maven-publish'

sourceCompatibility = VERSION_1_7
targetCompatibility = VERSION_1_7

group = "org.hamcrest"
version = "2.0.0.0"


repositories {
    mavenCentral()
}

dependencies {
    testCompile(group: 'junit', name: 'junit', version: '4.12') {
        transitive = false
    }
}

sourceSets {
    main {
        java {
            srcDirs 'hamcrest-core/src/main/java', 'hamcrest-library/src/main/java'
        }

    }
    test {
        java {
            srcDirs 'hamcrest-core/src/test/java', 'hamcrest-library/src/test/java'
        }
    }
}

test {
    testLogging {
        exceptionFormat = 'full'
    }
}

jar {
    manifest {
        attributes 'Implementation-Title': 'hamcrest-all',
                'Implementation-Vendor': 'hamcrest.org',
                'Implementation-Version': version
        instruction 'Import-Package', '''javax.xml.namespace; resolution:=optional,
                                         javax.xml.xpath; resolution:=optional,
                                         org.w3c.dom; resolution:=optional,
                                         *'''
    }
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = 'java-hamcrest'
            from components.java
            artifact sourcesJar
            artifact javadocJar
            pom {
                name = 'Java Hamcrest'
                description = 'Hamcrest matcher library for Java'
                url = 'http://hamcrest.org/JavaHamcrest/'

                scm {
                    connection = 'git@github.com:hamcrest/JavaHamcrest.git'
                    url = 'https://github.com/hamcrest/JavaHamcrest'
                }

                licenses {
                    license {
                        name = 'BSD Licence 3'
                        url = 'http://opensource.org/licenses/BSD-3-Clause'
                    }
                }

                developers {
                    developer {
                        id = 'joewalnes'
                        name = 'Joe Walnes'
                    }
                    developer {
                        id = 'npryce'
                        name = 'Nat Pryce'
                    }
                    developer {
                        id = 'sf105'
                        name = 'Steve Freeman'
                    }
                }
            }
        }
    }
    repositories {
        if (hasProperty('ossrhUsername') && hasProperty('ossrhPassword')) {
            maven {
                def snapshotRepoUrl = "https://oss.sonatype.org/content/repositories/snapshots/"
                def stagingRepoUrl  = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
                url = version.contains('SNAPSHOT') ? snapshotRepoUrl : stagingRepoUrl
                credentials {
                    username = ossrhUsername
                    password = ossrhPassword
                }
            }
        }
    }
}

signing {
    required { hasProperty('ossrhUsername') && hasProperty('ossrhPassword') }
    sign publishing.publications.mavenJava
}
